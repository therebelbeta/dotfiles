ZSH=~/.oh-my-zsh
ZSH_THEME="powerlevel10k/powerlevel10k"
alias getZshTheme="git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k"

COMPLETION_WAITING_DOTS="true"
HIST_STAMPS="yyyy-mm-dd"
plugins=(git rvm bower colorize command-not-found docker gem git-flow git-hubflow gitignore )

# SOURCING

source $HOME/.zshrc.pre-oh-my-zsh

source $ZSH/oh-my-zsh.sh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm

if [ -f $HOME/.svm/svm.sh ]; then
  source $HOME/.svm/svm.sh
fi

if [ -f $HOME/.gvm/scripts/gvm ]; then
  source $HOME/.gvm/scripts/gvm
fi

if [ -f $HOME/.rvm/scripts/rvm ]; then
  source $HOME/.rvm/scripts/rvm
  export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
fi

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

export PATH="/usr/local/sbin:$PATH"

# added by travis gem
[ -f $HOME/.travis/travis.sh ] && source $HOME/.travis/travis.sh

export PATH="$HOME/.yarn/bin:$PATH"
export PATH="$PATH:$(yarn global bin)"

if [ -f $HOME/.dotfiles/bin/k.sh ]; then
  source $HOME/.dotfiles/bin/k.sh
fi

if [ -f $HOME/.dotfiles/bin/concurrent.lib.sh ]; then
  source $HOME/.dotfiles/bin/concurrent.lib.sh
fi

if [ -s /usr/local/opt/autoenv/activate.sh ]; then
  source /usr/local/opt/autoenv/activate.sh
fi

[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

if [ -f ~/.zsh_ssh ]; then
  source ~/.zsh_ssh
fi

if [ -f ~/.secrets ]; then
  source ~/.secrets
fi

if [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# EXPORTING AND PATHING

export EDITOR='vim'
export SSH_KEY_PATH="~/.ssh/id_rsa"
export CIRCLE_BRANCH="local-testing"


if [ -d "$HOME/.gvm/bin" ] ; then
  export PATH="$HOME/.gvm/bin:$PATH"
fi
if [ -d "$HOME/.dotfiles/bin" ] ; then
  export PATH="$HOME/.dotfiles/bin:$PATH"
fi
if [ -d "$HOME/Apps" ] ; then
  export PATH="$HOME/Apps:$PATH"
fi
if [ -d "$HOME/bin" ] ; then
  export PATH="$HOME/bin:$PATH"
fi
if [ -d "$HOME/bin/apache-maven/bin" ] ; then
  export PATH="$HOME/bin/apache-maven/bin:$PATH"
fi

if [ -d "$HOME/.lit" ] ; then
  export PATH="$HOME/.lit:$PATH"
fi

export PATH="$HOME/go/bin:$PATH"

export PATH="$HOME/Library/Python/3.6/bin:$PATH"

export PATH="/usr/local/go/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/MacGPG2/bin:$HOME/git/bin:$PATH"


# ulimits

ulimit -n 8192

# ALIASES

alias reload='echo "reloading ~/.zshrc...";source ~/.zshrc'
alias relaod='reload'

# Navigation
alias home='cd ~/'
alias root='cd /'
alias jump='pushd ~/.dotfiles'
alias cd..='cd ..'

# Files and File System
alias ls='ls -aG'
alias ll='k -ha'
alias findSymLinks='find ./ -type l'

# Misc
alias ,='git rev-parse HEAD | pbcopy; echo -n "copied to clipboard: "; git rev-parse HEAD;'
alias push='git push origin $(git rev-parse --abbrev-ref HEAD)'
alias pull='git pull origin $(git rev-parse --abbrev-ref HEAD)'
alias check='git checkout'
alias cherry='git cherry-pick'
alias new='git checkout -b'
alias rebase='git rebase'
alias pull='git pull'
alias sb='git sb'
alias commit='git commit -a'
alias tag='git tag -a'
alias clean="git gc --prune=now && git remote prune origin"
alias start="git start"

alias pr='hub pull-request'
alias googledrive='google-drive-ocamlfuse ~/Google'
alias fuck='$(thefuck $(fc -ln -1))'
alias FUCK='fuck'
alias installnodemods='npm install -g mocha airpaste bower browserify codeclimate-test-reporter file,\pizza forever goingnative grunt-cli gulp http-server istanbul jshint me-api-server node-inspector nodemon npm-package-generator package-json-to-readme peerflix scaffolt semistandard slush speed-test standard standard-format ttystudio vtop watchify yo package-json-to-readme uglifyjs sequelize-cli bump-tag harasser manualfork'
alias localserver='ngrok'
alias dockerunset='unset DOCKER_TLS_VERIFY && unset DOCKER_CERT_PATH && unset DOCKER_MACHINE_NAME && unset DOCKER_HOST'

alias freedocker='echo "danglingdocker && cleardanglingdocker"'
alias cleardocker='echo "danglingdocker && cleardanglingdocker"'
alias dockerspace='echo "danglingdocker && cleardanglingdocker"'
alias danglingdocker='docker volume ls --filter dangling=true | wc -l'
alias cleardanglingdocker='docker volume rm $(docker volume ls --filter dangling=true -q)'

alias kube='kubectl'
alias kk='kubectl'
alias mk='minikube'
alias cat="bat"

alias edit='open -a "visual Studio Code"'
alias pwnyoutube='youtube-dl-interactive'

alias testalllite='yarn lint --config .eslintrc.ci.json; yarn schema && node scripts/build.js && node scripts/buildServer.js; node scripts/test.js --env=jsdom'

alias treed="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"

alias editAliases="edit ~/.dotfiles/zshrc.mac"

alias auth="echo 'kbfd --aws-okta exec lite -- echo Ready';kbfd --aws-okta exec lite -- echo Ready"

# FUNCTIONS

installruby()  { curl -sSL https://get.rvm.io | bash -s stable --ruby; reload; rvm --default use 2.1.2; }
installgems() { gem install sass compass bundler; }
installgo() { bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer);reload;gvm install go1; }

createinallfolders() { for d in ./*/ ; do echo "$d $@"; touch "$d$@"; done }
renameinallfolders() { for d in ./*/ ; do echo "$d $1 $2"; mv "$d$1" "$d$2"; done }
deleteinallfolders() { for d in ./*/ ; do echo "$d$@"; rm -rf "$d$@"; done }

setupglobalrepl() { npm i -g local-repl; ln -s $HOME/.dotfiles/.replrc.js $HOME/.replrc.js }
setuprepl() { ln -s $HOME/.replrc.js $( pwd )/.replrc.js; echo .replrc.js >> .gitignore }
alias noderequire='local-repl'

sshd() { docker exec -i -t "$@" /bin/sh }

splitsprite() { convert "$1" -crop "$2"x"$3"@ +repage +adjoin "$4".tile-%d.png }

untrack () { git update-index --assume-unchanged "$@" }
alias listuntracked="git ls-files -v | grep --colour=none ^h | cut -c 3-"
track() { git update-index --no-assume-unchanged "$@" }

findandkillonport () { lsof -t -i tcp:"$@" | xargs kill -9 }

installpokemonterminal() { sudo pip3 install git+https://github.com/LazoCoder/Pokemon-Terminal.git }

# source scripts folder

for file in $HOME/.dotfiles/scripts/*; do
  source $file
done

pokemon -r kanto